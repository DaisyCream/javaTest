package test02;

public class Quicksort {
    public static final int CUTOFF = 11;
        public static <T extends Comparable<? super T>> void quicksort(T[] arr) {
        quickSort(arr, 0, arr.length - 1);
    }

        static <T extends Comparable<? super T>> T median(T[] arr, int left, int right) {
        int center = (left + right) / 2;
        if (arr[left].compareTo(arr[center]) > 0)
            swapRef(arr, left, center);
        if (arr[left].compareTo(arr[right]) > 0)
            swapRef(arr, left, right);
        if (arr[center].compareTo(arr[right]) > 0)
            swapRef(arr, center, right);
        swapRef(arr, center, right - 1);
        return arr[right - 1];
    }
    
    private static <T extends Comparable<? super T>> void quickSort(T[] arr, int left, int right) {
        if (left + CUTOFF <= right) {
            // find the pivot
            T pivot = median(arr, left, right);
            // start partitioning
            int i = left, j = right - 1;
            for (;;) {
                while (arr[++i].compareTo(pivot) < 0);
                while (arr[--j].compareTo(pivot) > 0);
                if (i < j)
                    swapRef(arr, i, j);
                else
                    break;
            }
            
            swapRef(arr, i, right - 1);
            quickSort(arr, left, i - 1); 
            quickSort(arr, i + 1, right); 
        } else {
            insertionSort(arr, left, right);
        }
    }
    
    public static <T> void swapRef(T[] arr, int idx1, int idx2) {
        T tmp = arr[idx1];
        arr[idx1] = arr[idx2];
        arr[idx2] = tmp;
    }
   
    
    public static <T extends Comparable<? super T>> void insertionSort(T[] arr, int start, int end) {
        int i;
        for (int j = start + 1; j <= end; j++) {
            T tmp = arr[j];
            for (i = j; i > start && tmp.compareTo(arr[i - 1]) < 0; i--) {
                arr[i] = arr[i - 1];
            }
            arr[i] = tmp;
        }
    }
    private static void printArray(Integer[] c) {
        for (int i = 0; i < c.length; i++)
            System.out.print(c[i] + ",");
        System.out.println();
    }
    public static void main(String[] args) {
    	Integer[] data = {1,2,3,4,5,6,7,8,9,0,11};
		for(int i=0;i<data.length;i++){
			data[i] = (int)(Math.random()*100);
		}
        printArray(data);
        quicksort(data);
        printArray(data);
    }
}